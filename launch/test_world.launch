<?xml version="1.0"?>
<launch>
  <arg name="node_start_delay" default="1.0" />  
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="true"/>
  <arg name="output" default="screen"/>
  <arg name="world_name" default="$(find suii_simulation)/worlds/test_world.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"
  args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />

  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="$(arg output)" args="$(arg command_arg3)"/>
  </group>

  <node name="spawn_suii" pkg="gazebo_ros" type="spawn_model" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@'" respawn="false" output="screen"
    args="-file $(find suii_simulation)/urdf/suii_without_collision.urdf -urdf -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0 -model suii"/>

  <include file="$(find suii_manipulation)/ur3_suii.launch"> 
    <arg name="robot_ip" value="localhost"/>
  </include>
  
  <node name="manipulation" pkg="suii_manipulation" type="Manipulation.py" />
  <node name="rviz" pkg="rviz" type="rviz" />

  <include file="$(find timed_roslaunch)/timed_roslaunch.launch">
    <arg name="time" value="5" />
    <arg name="pkg" value="suii_simulation" />
    <arg name="file" value="base.launch" />
    <arg name="node_name" value="timed_roslaunch_1" />
  </include>
  <include file="$(find timed_roslaunch)/timed_roslaunch.launch">
    <arg name="time" value="5" />
    <arg name="pkg" value="suii_simulation" />
    <arg name="file" value="navigation.launch" />
    <arg name="node_name" value="timed_roslaunch_2" />
  </include>
</launch>
